{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "10500928777135347970"
    }
  },
  "parameters": {
    "routePolicyName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Route Policy"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure Region for deployment of the Route Policy and associated resources"
      }
    },
    "statements": {
      "type": "array",
      "metadata": {
        "description": "Route Policy statements"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ManagedNetworkFabric/routePolicies",
      "apiVersion": "2023-02-01-preview",
      "name": "[parameters('routePolicyName')]",
      "location": "[parameters('location')]",
      "properties": {
        "copy": [
          {
            "name": "statements",
            "count": "[length(range(0, length(parameters('statements'))))]",
            "input": {
              "sequenceNumber": "[parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].sequenceNumber]",
              "condition": {
                "ipCommunityIds": "[if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].condition, 'ipCommunityIds'), parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].condition.ipCommunityIds, null())]",
                "ipExtendedCommunityIds": "[if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].condition, 'ipExtendedCommunityIds'), parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].condition.ipExtendedCommunityIds, null())]",
                "ipPrefixId": "[if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].condition, 'ipPrefixId'), parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].condition.ipPrefixId, null())]"
              },
              "action": {
                "localPreference": "[if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action, 'localPreference'), parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.localPreference, null())]",
                "actionType": "[parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.actionType]",
                "ipCommunityProperties": "[if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action, 'ipCommunityProperties'), createObject('add', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipCommunityProperties, 'add'), createObject('ipCommunityIds', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipCommunityProperties.add, 'ipCommunityIds'), parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipCommunityProperties.add.ipCommunityIds, null())), null()), 'delete', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipCommunityProperties, 'delete'), createObject('ipCommunityIds', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipCommunityProperties.delete, 'ipCommunityIds'), parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipCommunityProperties.delete.ipCommunityIds, null())), null()), 'set', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipCommunityProperties, 'set'), createObject('ipCommunityIds', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipCommunityProperties.set, 'ipCommunityIds'), parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipCommunityProperties.set.ipCommunityIds, null())), null())), null())]",
                "ipExtendedCommunityProperties": "[if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action, 'ipExtendedCommunityProperties'), createObject('add', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipExtendedCommunityProperties, 'add'), createObject('ipExtendedCommunityIds', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipExtendedCommunityProperties.add, 'ipExtendedCommunityIds'), parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipExtendedCommunityProperties.add.ipExtendedCommunityIds, null())), null()), 'delete', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipExtendedCommunityProperties, 'delete'), createObject('ipExtendedCommunityIds', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipExtendedCommunityProperties.delete, 'ipExtendedCommunityIds'), parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipExtendedCommunityProperties.delete.ipExtendedCommunityIds, null())), null()), 'set', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipExtendedCommunityProperties, 'set'), createObject('ipExtendedCommunityIds', if(contains(parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipExtendedCommunityProperties.set, 'ipExtendedCommunityIds'), parameters('statements')[range(0, length(parameters('statements')))[copyIndex('statements')]].action.ipExtendedCommunityProperties.set.ipExtendedCommunityIds, null())), null())), null())]"
              }
            }
          }
        ]
      },
      "metadata": {
        "description": "Create Route Policy"
      }
    }
  ],
  "outputs": {
    "resourceID": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedNetworkFabric/routePolicies', parameters('routePolicyName'))]"
    }
  }
}